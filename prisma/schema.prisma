datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String      @id @default(cuid())
  pin        String?     @unique // (legacy) Code PIN unique (4 chiffres) - optional
  pinHash    String?     // bcrypt hashed PIN
  sessions   Session[]
  pinLogs    PINLog[]    // Historique des connexions
  authTokens AuthToken[] // Tokens d'authentification
  createdAt  DateTime    @default(now())
  lastUsed   DateTime    @default(now())
}

model PINLog {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  ipAddress String?
  userAgent String?
  
  @@index([userId])
  @@index([createdAt])
}

model Session {
  id             String   @id
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name           String
  campaign       String   // JSON stringifi√©e
  createdAt      DateTime @default(now())
  lastAccessed   DateTime @default(now())

  @@index([userId])
}

model Chat {
  id         Int      @id @default(autoincrement())
  sessionId  String
  message    String
  createdAt  DateTime @default(now())

  @@index([sessionId])
}

model AuthToken {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime?
  createdAt DateTime @default(now())

  @@index([userId])
}
